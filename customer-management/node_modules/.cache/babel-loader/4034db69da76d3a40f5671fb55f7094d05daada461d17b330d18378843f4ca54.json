{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\customer-management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios'; // Importing Axios for making HTTP requests\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react'; // Importing necessary React components\nimport './App.css';\nimport Pagination from './components/Pagination'; // Importing Pagination component\nimport SearchBar from './components/SearchBar'; // Importing SearchBar component\nimport CustomerTable from './components/customertable'; // Importing CustomerTable component\n\n// Function component for the main application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables for managing customers data, search term, pagination, and sorting\n  const [customers, setCustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(20);\n  const [sortColumn, setSortColumn] = useState('date');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [sortDirectionTwo, setSortDirectionTwo] = useState('asc');\n  // Effect hook to fetch data from the server on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/customers');\n        setCustomers(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  // Function to handle sorting by a single column\n  const handleSort = column => {\n    // If the same column is clicked, toggle the sorting direction\n    if (column === sortColumn) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If a different column is clicked, set the new sort column and default sorting direction to ascending\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n  // Function to handle sorting by the second column\n  const handleSortTwo = column => {\n    // If the same column is clicked, toggle the sorting direction\n    if (column === sortColumn) {\n      setSortDirectionTwo(sortDirectionTwo === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If a different column is clicked, set the new sort column and default sorting direction to ascending\n      setSortColumn(column);\n      setSortDirectionTwo('asc');\n    }\n  };\n  // JSX to render the main application\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Customer Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n      customers: customers,\n      searchTerm: searchTerm,\n      currentPage: currentPage,\n      customersPerPage: customersPerPage,\n      sortColumn: sortColumn,\n      sortDirection: sortDirection,\n      handleSort: handleSort,\n      handleSortTwo: handleSortTwo\n      // Pass handleSort function as a prop\n      ,\n      sortDirectionTwo: sortDirectionTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: Math.ceil(customers.length / customersPerPage),\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n// Exporting the App component\n_s(App, \"lcddqRJhW9/p7T8S2CQ6c6rLudw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","Pagination","SearchBar","CustomerTable","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","searchTerm","setSearchTerm","currentPage","setCurrentPage","customersPerPage","sortColumn","setSortColumn","sortDirection","setSortDirection","sortDirectionTwo","setSortDirectionTwo","fetchData","response","get","data","error","console","handleSort","column","handleSortTwo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalPages","Math","ceil","length","_c","$RefreshReg$"],"sources":["D:/project/customer-management/src/App.js"],"sourcesContent":["import axios from 'axios'; // Importing Axios for making HTTP requests\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react'; // Importing necessary React components\nimport './App.css';\nimport Pagination from './components/Pagination'; // Importing Pagination component\nimport SearchBar from './components/SearchBar'; // Importing SearchBar component\nimport CustomerTable from './components/customertable'; // Importing CustomerTable component\n\n\n// Function component for the main application\nfunction App() {\n  // State variables for managing customers data, search term, pagination, and sorting\n  const [customers, setCustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(20);\n  const [sortColumn, setSortColumn] = useState('date');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [sortDirectionTwo, setSortDirectionTwo] = useState('asc');\n // Effect hook to fetch data from the server on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/customers');\n        setCustomers(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n // Function to handle sorting by a single column\n  const handleSort = (column) => {\n    // If the same column is clicked, toggle the sorting direction\n    if (column === sortColumn) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If a different column is clicked, set the new sort column and default sorting direction to ascending\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n// Function to handle sorting by the second column\n  const handleSortTwo = (column) => {\n    // If the same column is clicked, toggle the sorting direction\n    if (column === sortColumn) {\n      setSortDirectionTwo(sortDirectionTwo === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If a different column is clicked, set the new sort column and default sorting direction to ascending\n      setSortColumn(column);\n      setSortDirectionTwo('asc');\n    }\n  };\n// JSX to render the main application\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center mb-4\">Customer Management</h1>\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <CustomerTable\n        customers={customers}\n        searchTerm={searchTerm}\n        currentPage={currentPage}\n        customersPerPage={customersPerPage}\n        sortColumn={sortColumn}\n        sortDirection={sortDirection}\n        handleSort={handleSort} \n        handleSortTwo={handleSortTwo}\n        // Pass handleSort function as a prop\n        sortDirectionTwo={sortDirectionTwo}\n      />\n      {/* Rendering the Pagination component and passing necessary props */}\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(customers.length / customersPerPage)}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n}\n// Exporting the App component\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}